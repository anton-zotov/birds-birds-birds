{"version":3,"sources":["src/bird.ts","src/vector.ts","src/boid.ts","src/canvas.ts","src/ui.ts","src/obstacle.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AOAA,ACAA,IDAIA,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAI,ACAA,CAAC,cAAc,CAAC;ADCpC,ACCA,SDDSZ,ACCAa,UAAUA,CAACC,IAAI,EAAE,CDDCd,CAAA,EAAG;EAC5B,ACCA,IDDI,ACCAe,CDDChB,MCCM,GDDG,ACCAe,EDDE,ECCE,CAACE,SAAS,CAAC,CAAC;EAC9BD,EDDEhB,KCCK,CAACkB,GDDG,GAAGhB,ACCA,GAAG,SDDS,CAAC,CAAC,CCCC;EDA7B,ECCEa,IAAI,CAACI,MAAM,CAAC,CAAC;AFLjB,ECME,ACAA,CAAC,IFNH,CAAA,CCMSnB,SAAS,IDNlB,CAAA;ACOA,APLA,AEDA,ACDA,AGCA,ADCA,ADFA,AHAA,EOOEgB,ERLF,AEDA,ACDA,AGCA,ADCA,ADFA,AHAA,IDEA,CQKS,CAACI,ALPV,AGCA,ALDA,CDEA,CEDA,AGCA,ADFA,CDAA,AGCA,ALDA,COOc,CNNd,AGCA,ADFA,EIOiBL,GFNjB,CEMqB,AFNrB,CEMsBK,ANNtB,AEDA,CFCA,AEDA,CJEA,EQK0B,ALP1B,AFAA,COO2BC,CHL3B,CCDA,CAAA,EEMgC,CAAC,ANNjC,AEDA,CFCA,AEDA,EIOoC,ARLpC,CQKqC,CAAC,ALPtC,AFAA,COOuC,CAAC,AHLxC,GGK2C,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;ADE3D,ALNA,AIDA,AFAA,EIMER,ARDE,AGHA,AEEA,AJFA,ECDJ,AIDA,EEMM,CAACS,CNLP,CKMStB,CDPT,CNKI,AEJJ,ACCI,AEEA,AJFA,EKFJ,ENKI,CAAY,CQCC,ALJb,AFAA,COIcuB,ALJF,AFAA,CIEZ,AJFyB,CDGH,AML1B,ADIgB,CEGKvB,ADPrB,ALE+B,CMKV,APFO,ACHgB,EMKpB,ALNxB,ADC4C,EIEd,CFFG,CEED,CFFC,AGFjC,CEM8B,ARDW,AMLzC,CEM+Bc,CRDU,EKDK,EHH9C,AGG8C,EGER,EAAED,IAAI,CAACW,WAAW,CAAC;AACzD,AFNA,AFCA,EGME,ALOE,EFVwB,AGHxB,AGDJ,ADIQ,ADHJ,AHAY,IDGY,AGHxB,AEGQ,AJHI,CIGH,AJHG,ECaZ,CIdJ,CHCI,CFAY,CCaZ,AIdJ,ADImB,CLAS,AEWb,ACdX,EEGkB,ADHJ,CHAF,CEAZ,AFAY,CDGY,AIHC,CED7B,ALCgB,CKDhB,CJe+B,AGXH,CDHK,CJGL,AEYb,CFZa,EAAA,IMJ5B,AFCiC,CFeF,AIhB/B,AFCiC,EFgBjB,IEhBuB,CAAC,CAAC,EFgBT,AEhBW,CAAC,CFiB5B,AEjB6B,QFiBb,EAAA;AMVhC,AFPA,AFCA,EGME,ECAEC,ANOW,AIdf,ADIQ,ADHJ,EGME,APJsB,ACHZ,CAAA,CCcD,AGVH,CHUG,AGVF,CJJG,CAAa,CKA7B,EEOc,ARJc,CMH5B,ADImB,CDHH,CIMC,ARJW,AEWL,CGVD,CLDmB,AIFtB,CFaJ,CMPM,CFPrB,CAAA,CDI4B,ADHJ,IFaD,KIdvB,CAAA;AEQA,AFPA,AFEA,ECEI,EEGA,APLqC,AEY1B,ACdP,AGAR,ALD6B,ICed,ACdH,AGAZ,CEOSC,ANOM,ACdF,ACEJ,CGKC,CDPV,GCOczB,EJPM,CDcG,CMPLyB,AFPlB,CCOmB,ACAD,ALPK,AGAvB,CCOkB,ALOH,CKPI,ACAE,IFPrB,CAAA,CHA+B,CDcR,ACdS,CCEH,CAAC,KAA8B,EAAA,KDFd,CAAC,SAAS,CAAsB;AGC9E,ECOE,ACAA,AHFE,ADHA,CGKD,CAAC,APRQ,AEeI,ACdR,AGAR,ALF+B,EOSzBD,AJLE,EJHI,AEeI,ACdJ,AFFmB,CDCnB,AEeI,ACdH,AFFkB,CIO3B,CEEOvB,AFFP,ADHS,GGKC,ADPd,ALF+B,EMSf,ACAA,ALPI,CDcI,AIdxB,CEOkB,CRRI,AGCC,AFFQ,CCgBf,ACdO,AEKnB,AJP2B,CIO3B,CLNqB,AGCF,AFFQ,CDCL,AIGD,CEFzB,CHAuB,AGAvB,ADKQ,GHSgB,AGTpB,CFLuB,CAAC,GCEO,EAAE,EDFF,AGAnC,CAAA,ADKS,GAA6B,EFLH,AEKG,IFLH,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,IAAI,CAA6B;AGEjF,ICMI,ACAA,ARNI,AEaQ,ACbR,AGAF,ADIE,ADHA,EHLuB,CIQpB,AJRoB,CMUvBC,APNI,AEaI,ACbJ,AEIA,CLJC,AEaG,ACbH,CGAD,ALJmB,CAAa,CIQ5B,CLJC,AGAA,AGAF,ADIC,CFJE,AEIA,CEEH,CPNK,CEaI,AIbL,CCMD,AHLI,CGKH,CPNK,AEaR,CKPK,AJNI,ACCA,EDDE,CIMHD,CDNL,AFCU,CEDV,CCMQ,CAACE,ALOJ,IIbC,CCMQ,ADNP,AFCG,CAAA,CGKMC,KAAK,AHLL,CGKM,ADNP,AFCE,CEDD,IFCM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YGKiB,CAAC;ADJzG,EEKE,CJLG,CGKD,APNI,AELG,AGUH,AJVoC,EEKhC,CEKD,CECHF,APNI,AELD,AGUC,CLLC,AELF,AIMF,AFAE,GDDO,CCCH,EGKA,CJNO,CIML,APNI,AKKA,CAAA,ADJD,CCIG,CLLC,CGAG,CAAC,CDLH,GAAG,CIMD,CNDK,AMCL,EJNK,AIML,AFAK,QFNA,CAAA,CEMU,EAAE,GFNN,CAAC,CAAC,EAAE,CAAC,CAAC,CCKc,CAAC;EKQzDsB,ARPE,AMCA,EJNO,AGUH,ADJA,AHNA,EMWF,ADLI,CDIC,CHVA,AGUC,AJVA,CCAD,ADAE,CAAC,CIUC,CGEH,AHFI,CECHnB,ANXI,CAAC,COYHqB,AFNI,CDIC,CAAC,CCJC,AFAA,CEAC,EFAE,CFND,CKWD,AFDI,CECHxB,AFDI,CGEH,ANZE,AGUE,ADJA,CIMH,CHFK,EHVA,EKWA,AFDI,CECH,AFDI,CECH,AHLJ,CGKK,AHLL,CGKM,ELXJ,CMYO,ANZP,AGUW,CAAC,CAAC,ADJT,CAAC,CCIU,EHVT,CAAC,CAAC,AGUW,ADJT,CCIU,ADJT,CFND,CAAC,CAAC,GGUc,CDJR,CCIU,CAAC,ADJT,ECIW,CAAC,EDJP,CCIU,ADJT,ICIa,CAAC,EAAE,ADJT,CCIU,ADJT;EJC7D,AMAA,ECKA,ACCA,ANZO,ACMH,AEIA,AJVA,EDMJ,AMAM,CNAN,AKIO,CGEHyB,ANZG,ACMC,AEIA,AJVA,CCAD,ACME,AFNA,CAAC,GOYD,APZI,CAAC,CKMC,CEMHC,ARNZ,CAAA,AKIiB,CCJC,ADID,CFJE,AEIA,CFJA,CHAf,AGAiB,CGAC,EEMF,ARNpB,AENsB,CMYDC,ENZI,IAAI,GFMxB,GAA6B,EAAE,AENP,CAAA,CMYQ,CAAC,ERNW,EAAA,AENd,CAAC,CAAC,EAAE,CAAC,CAAC,cMYqB,CAAC;AJLnE,EGKE,ADLE,ALNA,EOYA,ARNI,AELI,ACKJ,AEKA,ECLE,CDKC,CLLG,AELF,AGUA,CGCH,ANXG,CCKE,CAAC,EKMFC,ARNM,CQML,AFNI,ENAI,CQML,AFNI,ADKA,CGCH,EAAEA,ARNM,AKKF,CGCH,ARNM,AELH,AIKC,GEMDH,ANXG,EFKK,CAAC,AGAF,CDLA,ACKC,CKMH,AFNJ,ADKQ,CGCHI,AFNL,CNAY,CAAC,IQMF,ARNM,AELX,ACKS,AGAT,CNAY,AELZ,AIKC,CEMMD,ALNI,CKMH,EAAE,AFNL,CAAC,CEMM,ANXN,CAAC,CFKa,AELZ,CFKa,CAAC,AELZ,CAAC,AIKC,CNAY,AELZ,AIKA,CHAD,AGAG,GNAc,AMAX,CNAY,IAAI,CAAC,AMAX,CAAC,KAAK,ENAa,AMAX,CNAY,CAAC,CAAC,CMAV,CAAC,MAAM,CAAA,CAAE,GAAG,MAAM,CAAC,MAAM,CAAC;AFE5F,EGKE,ADNE,ALLA,EDKU,AELF,AGUJ,EGCF,ALP0C,AGCtC,CDKC,CLLG,AELF,AGUA,AJVR,CMWK,ALXG,AEMH,AHNL,COWMrB,ARNI,EOMF,AFDI,CLLS,AGDuB,AEMhC,CCLE,ADKA,EGCF,CAACJ,ARNY,AMAR,CNAS,AGDsB,AFJhD,CEIiD,ACElC,AHNf,CGMe,CEDM,CNAS,AICf,AHNZ,CDK4B,ECL/B,EOWuB,CAACsB,ANXG,CCIgC,AGCtC,CHDsC,AGCtC,CNAkB,AELT,ACI+B,EKOhC,CAACG,ANXG,CMWF,APX3B,COW4B,AFNL,ALLd,COWoBb,AFNL,CLLf,GOWwB,AFNL,CEMM,AFNL,KEMUR,CFNJ,CAAA,CAAE,GEMQ,AFNL,CEMMV,EFNH,EAAE,IAAI,CAAC,GEMQ,CAAC,CAAC,CFNJ,CEMM,AFNN,CAAE,GAAG,GAAG,CAAC;ACOzE,EDLI,AFAA,EFLQ,ACEoC,AEQxC,AJXA,CEGyD,CHCjD,AGDkD,CHCjD,AKON,CGAHY,ANVI,AGUA,CHVA,AIKD,CNFM,CCJF,CDIE,CAAA,AMEF,CNFE,AIED,CCKG,AJXA,CIWA,CAAE,ADLF,CIKD,CAACgB,AFLJ,CAAA,CLNU,CGMD,AHNE,EOWF,AFLL,CEKMG,AFLL,CEKM,APXI,COWH,APXI,COWH,APXI,ECCC,CDDE,CAAC,CCCA,AIKR,ALNS,CAAC,CCCA,AIKR,CLNU,IAAI,CAAC,CAAC,CKMR,EAAE,ALNS,CAAC,CAAC,CAAC,CAAC,KKMJ,EAAE,SAAS,CAAC;ACO7D,ADNA,AFAA,EDHI,AEQA,AJXA,CIWC,AJXA,CCCO,EMUN,ARRa,CAAC,CEFR,CKWHzB,ALXG,CFEQ,EAAA,CAAA,CAAuB,KOSxBA,CAACC,GAAG,EAAE,KLXQ,GAAG,CAAC;AIOrC,AFAA,EGKE,AJRE,AEOJ,AJVI,EOUA,ARRI,AEDI,IFCE,AEDF,ACER,AFHA,CMWK,ALVG,ACER,AGGK,ADIT,ADJS,AHNL,CMWM,EAAE,APTM,GOSHA,APTM,EKQpB,CECiB,ANXd,CDEqB,ACFrB,CMWgBC,APTM,CIIL,CEAC,AFAD,AHNd,CEGH,AGGmB,CHHf,ACGa,CHNjB,EMWuB,CAAC,APTM,CMIG,CHH7B,CHD8B,AGC9B,AGG6B,GJLA,CFCK,ACFlC,CDEmC,ACF1B,CCCuB,CDDvB,CDE6B,AEDJ,CFCK,AGCvC,EAAA,GHD4C,GAAG,CGC1C,CHD4C,CAAC,AGC7C,GHDgD,IAAI,CAAC,QAAQ,GAAI,CAAC,qCOS6B,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH,AFFA,CArBA,CCkBI,ADlBJ,ADkBI,CClBJ,CGuBIiB,ARRI,AEFI,ADDJ,GDGG,AMGF,CNHG,AEFA,CAAA,ACCR,CGIQ,CLNG,CDGC,CAAA,CQQF,ARRI,AIGF,CEAC,ALNE,CKMD,CEKD,AJLE,CDJf,EGIkB,CEKD,AFLE,AFAA,AHNE,CEErB,AFFsB,EEEtB,EFF0B,CAAC,CAAC,GAAG,CAAC,CAAC,CCCA,ADDC,EAAE,CCCA,GAAG,ADDC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AMarDhB,AFzBa,ADmBb,EIKE,ANJK,ADPH,COWD,APXE,CDIG,AMCiB,CEMpB,CLTG,CIUD,ACDA,ARPI,AKjBE,CEyBLT,ACDA,ARPI,AKjBC,ECkBkB,EAAE,CHHlB,GEfF,CLiBQ,AGFF,CHEG,AGFF,CHEG,AKjBV,CEyBO,CPRK,CAAC,COQHD,APRI,EGFA,CAAC,CEff,IFeoB,UIUQ;AACzCU,ACDA,AJJA,EFCI,AIJmC,ALHnC,CKGqC,CNAjC,AGFJ,CAAC,AGEsC,CJIvC,AEDE,CGKC,APRI,AEIP,AEDG,CGKCH,APRI,ACHR,CAAA,KDGc,CAAC,CEIf,CAAA,CKIc,ANXd,CAAA,CDGoB,COQHA,APRI,EEIf,AIJmD,AFGtC,AHNf,CKGsD,AFGtC,EFCpB,ADPA,KMW2B,IHLI,CFE3B,ADRC,CGM4B,AHNnB,EAAA,ECQG,EACb,cAA6B,AEHoB,CAAC,CFIlD,SAAqB,EACrB,WAAmB,EACnB,YAAoB,EAAA;AMA5B2B,AJLA,EEHI,ENCI,AESA,ADbA,EOWF,AJLA,CIKCxB,ARPI,AMDF,AFGF,CJFK,AESA,CAAC,CIVD,CLHG,GOWD,CFRG,ALHE,CKGD,CEQDiB,ARPI,CAAA,CAAE,AMDF,CAAC,CLHG,CAAC,CGMH,CAAC,EIKE,APXI,CAAC,CAAC,EKGT,CJUY,ADbA,CCaC,ADbA,EKGT,ALHW,CGMH,CEHR,CJUc,AEPJ,CFOK,ADbA,CAAC,CAAC,GAAG,CAAC,CAAC,YGMQ,CAAC;AAE1D,EHPI,CAAC,CDIG,AEUA,AIZwB,EFK1B,CJHK,AIGJ,CJHK,AEUA,GIZoB,GNEd,CAAC,AMFiB,INEb,EAAE,AMFW,CNEV,AEUA,AIZU,CNET,AIGJ,CFOK,AEPJ,EELgB,CAAC,CJYT,CAAC,EIZY,CAAC,GFKX,EAAE,QFOY,CAAC,GEPD,CAAC,UFOc,CAAC;AENjE,EENgC,ALA5B,CKA0C,CNGtC,AEUA,AIbuC,EFMzC,CJHK,AIGJ,CJHK,AEUA,ADbR,CCaS,ADbT,KDGc,CAAC,CAAC,ECHhB,CAAA,CDGoB,ECHjB,CDGoB,AIGJ,CJHK,AIGJ,CHNpB,CDG0B,IAAI,EEUE,CFVC,AEUA,CFVC,CAAC,ACH/B,CGM4B,AHNnB,EGMqB,AHNrB,MCa+B,EAAE,IEPA,CAAC,OFOW,CAAC;AIZ/D,AFOA,EDTI,EHKI,AEUA,ADbA,EGOF,CJJK,AIIJ,CJJK,AEUA,ACfR,CDeS,ACfT,EFEW,GDGG,CAAC,ACHA,CDGC,IAAI,CCHC,CAAC,CDGC,AGLvB,ACSmB,CJJK,AGLpB,ACSgB,EJJM,ACHA,CDGC,ACHA,CAAC,EEFxB,CHK2B,AGL3B,AFE2B,CAAC,CGOH,CJJK,ACHA,CDGC,AIIJ,CJJK,AEUA,CAAC,CDbC,CAAC,CEFnC,AFEoC,EEFpC,CFEuC,CAAC,CGOH,AHPI,CCaC,AENJ,CFMK,GCfrC,EAAA;AGId,AFMA,EHPI,CAAC,CDGG,AEWA,AIbJ,EFME,CJJK,AIIJ,CJJK,AEWA,CAAC,ACjBT,AGIa,QNEI,CAAA,AGNjB,CHMmB,GGNnB,CDiBuB,AEPJ,CFOI,ACjBvB,ACUoB,CFOK,SEPK,EAAE,UAAU,CAAC;AEL/C,AFOA,EHPI,EDGI,AEUA,AIbJ,EHJI,EHOM,AEUF,ADbR,CCaS,AIbI,AFOD,AHPZ,IDGe,AGPJ,GHOO,CGPH,CAAC,AFIhB,CAAA,ICauB,CAAA,CAAE,ACjBF,CAAC,ACWK,CJJX,AIIW,CJJX,ACHT,CGOoB,EHP7B,CEJ8B,EHOZ,CAAY,IAAI,CAAC,GCHnC,ODG6C,EAAA,QAAA,CAAQ;AMFzD,EFOI,EJJI,AEUA,ACjBJ,AGIA,ALAI,CEJH,GDiBO,ADbE,CCaD,AENF,EHPM,EKAQ,CLAL,IAAI,CAAC,EGOF,CHPK,CAAA,CGOF,AHPI,ECaA,CAAA,CAAE,UENQ,GAAG,IAAI;AEL/C,AFMA,EFMI,CAAC,CFVG,ACHA,GDGG,CAAC,ACHA,CKCH,ELDM,KAAK,CDGC,ACHA,EAAE,CDGC,SAAS,EMFF,CAAA,EAAA;AFI/B,EFUI,AIbA,ENEI,EEWJ,AIbM,ALDE,CCcR,AEVJ,CJDY,AICZ,CJDa,GMFG,CLDG,EKCA,CJaf,CAAA,ADdmB,CAAC,CDGD,AMFA,CAAC,CLDG,CDGD,ACHE,GGI5B,AHJ+B,CDGD,AEWjB,AIbiB,ALDE,CDGD,AMFD,CAAE,AFGhC,CFUI,CFX8B,CAAC,AMFA,EAAE,ENEE,CAAC,GEW1B,KAAa,CEV3B,CJDkD,AEWrB,GFXwB,CAAC,EAAE,AEWb,EAAA,CFXgB,CAAC;AIK5D,EENI,ENEI,AEWA,EIbE,CNEC,CAAC,GEYA,CFZI,CAAA,CAAE,AMFA,CJcF,CAAC,CIdI,IAAI,GJcA,CAAC,CAAC,GAAG,AIdL,CJcM,AIdN,IJeb,EIfmB,CAAC,CJehB,CAAC,EIfmB,CAAC,KJeZ,CAAC,AIfiB,CJehB,AIfgB,CAAE,EJef,CAAC,AIfiB,IJgBpC,EIhB0C,CAAC,CJgBvC,CAAC,GIhB2C,EAAE,GJgBrC,CAAC,AIhBwC,CJgBvC,AIhBwC,GJgBrC,GIhB2C,CAAA,CJgBtC,AIhBwC,GAAG,CJiBlE,IAAI,CAAC,AIjBmE,CAAC,MAAM,CJiBlE,AIjBmE,CJiBlE,CAAC,GAAG,MAAM;AETpC,EFWI,ACzBQ,AGQR,CJiBC,CFfG,AIIJ,AHRI,GDIG,CAAC,AGVA,CAAA,AGQD,ELFI,EKEA,ENEI,ACJA,CDIA,CAAE,CGVT,ACcM,CDdN,ECcS,EENN,CAAA,KHRO,ACcO,CAAC,EDd1B,AGQmB,CAAC,QAAQ,EAAE,CHR9B,ACcwC,CAAC,IENL,CAAC,MFMe,CAAqB;AEL7E,AFOA,EJLI,AEgBQ,ADpBR,CDIC,ACJA,CENG,ED0BI,CAAA,CC1BA,CAAC,ACeG,OFWJ,AC1BQ,CD0BR,AC1BS,ID0BL,CC1BU,ED0BtB,CC1ByB,CCeI,CAAC,IDfC,CAAC,ED0BnB,CEXsD,EAAA,GFWxC,EAAA,AC1Be;AGU9C,ENEI,AIIA,AHRA,ECmBI,AC1BA,EHWJ,CAAA,CEeU,AC1BF,AFOR,CEPS,AGSJ,ALFL,MCmBiB,CFfjB,AGXgB,ACeF,CJJd,AGXiB,ACeF,CFWK,ADnBpB,CAAA,IEPuB,CD0BG,ADnBrB,CCmBsB,CC1BD,AGSJ,CAAC,ALFvB,CCmB8B,CAAC,GFfhB,AGXiB,CD0BG,AC1BF,AGSI,AFMN,CFWK,AEXJ,CJJhC,AMFqC,ELF/B,GAAW,ECmB2B,AEXJ,AHRvB,CCmB4B,CAAC,AC1BF,ACeF,CJJ1B,GAA6B,EAAA,GEeU,CAAA,CAAE,CAAC,AEXhB,IFWoB,CAAC,IAAI,CAAC,QAAQ,CAAC;ECzB7E,AGSA,CHTC,CHWG,AEeA,AEXA,AHRA,GDIG,CAAC,AEeE,ADnBF,GKEC,CNEG,AIIA,AHRA,CDIA,AEeG,AEXF,AHRA,CDIC,AMFF,EJiBM,ADnBF,CAAA,CAAE,CKED,CAAC,CFMG,AHRA,CGQC,CFWG,CAAC,AIjBJ,ALFE,CKED,CLFG,CCmBG,CAAC,IAAI,CAAC,GEXC,CAAC,IFWM,CAAC,AEXF,CFWG,AEXF,CAAC,IFWM,CAAC,IAAI,CAAC,QAAQ,CAAC;ECxB1D,ACcP,CAAC,CJHG,AEcA,AIlBqB,AFOvB,EHRM,CDKD,CAAC,AGXD,CAAA,CGOwB,CJkBpB,CFdC,AMJqB,CLDlB,EDKA,CEcC,CDnBG,CENZ,AFMa,CENb,KAAK,GHWe,AGX3B,AFM6B,CAAA,CAAE,CAAC,IAAI,CAAC,GAAG,CENxC,AFMyC;AGS7C,EFWI,AInBuC,CJmBtC,AInBwC,CNMrC,AGZA,CGMuC,ENMpC,CAAC,AGZA,CAAC,OAAO,CHYC,AGZA,GHYG,MGZM,CHYC,AGZA,AGMsC,CHNrC,AGMsC,EHNpC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;AGO7E,AFGA,EFiBY,AC1BR,CAAC,CHYG,ACNA,ECoBI,CFdD,AEcC,AEjBZ,CJGY,AIHZ,GHHe,IAAI,CDMC,AEcR,CFbA,AEaA,EFbA,CAAA,KIJZ,CJIY,CAAG,CIJf,GJImB,CAAC,IAAI,CAAC,EEaS,GAA9B,GEjBJ,MJIuC,CAAC,AEaL,CFbM,CAAC,GEaM,EAAA,EFbC,CAAC,CAAC,CAAC,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,EACpF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAC5B;AMRT,EHPA,AFMI,CAAC,CDWG,AESA,GFTG,CAAC,AESA,CAAC,AC1Bb,AGOS,MHPR,EHiBoB,GAAG,EMVF,CAAC,CJmBK,CFTC,EESE,IAAI,CAAC,CInBC,EAAA,qBJmBuB,CAAC,KAAK,EAAE,EAAE,CAAC;AC1BvE,CAhCA,CAAA,AGuCuB,ALCnB,CExCJ,CHkDQ,AESA,EIpBe,CNWZ,CAAC,AESA,ADnBR,CCmBS,ADnBT,ODUgB,AMXG,CNYX,CCXR,CDWQ,ACXR,CDWQ,CMZW,CLChB,CCmBoB,EDnBvB,CDWQ,AEQkB,AIpBP,CNYR,AMZQ,EAAA,CJoBW,CFRf,AEQgB,CFRf,IAAI,CAAC,ACXrB,aDWkC,CAAC,CAAC,CAAC,CEQiB,CAAC,KFRX,AEQgB,CFRf,CAAC,AEQgB,CFRf,EAAA,AEQkB,CAAC,GFRnB,CAAA,CAAA,MAAA,CAAK,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,EAClF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CACvB;AGtDI,IHwDL,AEIA,AIrBe,ALEf,GDeG,AGxDE,CHwDD,AEIA,AC5DC,CD4DA,EDnBE,GEzCF,AGuCU,CLEJ,CAAC,CDeC,AGxDR,AGuCU,CAAc,ENiBb,ACfA,CAAC,CCmBC,CC5Db,ED4DgB,ADnBA,CDeC,ACfA,CAAC,ECmBE,CAAC,ADnBA,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,ICmBI,ADnBA,CCmBC,ADnBA,CAAC,CAAC,GCmBG,EAAE,GAAG,CAAC;EIrB/B,ALGjC,CAAC,CDeG,AEKA,GFLG,CAAC,AEKA,CAAC,OFLO,CACR,EAAA,CAAA,IEIgB,CAAC,CFJjB,CAAG,EEIkB,CAAC,CFJf,CAAC,IAAI,CAAC,QEIwB,EAAE,IAAI,CFJf,AEIgB,CFJf,CAAC,CAAC,KEIqB,EFJd,CAAC,AEIgB,CFJf,CAAC,CEIiB,CFJjB,AEIkB,IFJlB,CAAA,CAAA,MAAA,CAAK,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE,EACtF,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,EACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAC5B;EMrBL,ALIO,EDmBH,AEAA,GFAG,CAAC,AEAA,AIvBF,ALIC,CCmBE,AIvBF,ALIA,IAAI,CKJC,CNuBG,AMvBH,CNuBG,AMvBD,ALId,CDmBiB,OEAO,CAAC,CDnBb,EAAU,CCmBO,CAAC,ADnBN,EAAU,EAAA,UCmBU,CAAC;EFC7C,AMtBA,CNsBC,CEAG,ADnBA,ICmBI,CAAC,EDnBE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,ECmBE,CAAC,ADnBA,CAAA,CAAE,ECmBE,CAAC,aAAa,CAAC;EFChD,AEAI,AItBA,ALGA,CCmBC,ADnBA,KKHK,CNsBV,AMtBW,INsBV,GMtBiB,CAAC,SAAS,GAAG,SAAS;ANsBxC,CA/DA,CAAA,AEiEY,AIvBR,ALGJ,CD7CA,GEiEY,CAAA,CIvBF,CAAC,ALGX,MAAC,CCoBW,AIvBM,CJuBN,AIvBO,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CJuBN,GAAxB,EIvBoC,CAAC,KAAK,EJuBjB,AIvBmB,MAAM,CAAC,MAAM,CJuBV,AIvBW,EJuBX;AFjEtC,AC6Cb,CA/CA,CK8CI,AL9CJ,CAAA,CCoEQ,GFlEK,AM4CJ,CN5CI,AEkEC,AItBJ,IN5CG,GAAA,AM4CI,CAAC,GN5CL,AEkEY,GAAG,IAAI,AItBb,CJsBc,GItBV,CJsBc,CAAC,AItBb,CAAC,EAAA,WJsB0B,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;ADpEvE,ICqEL,AItBA,GL/CK,CCqED,AItBA,AL/CC,CCqEA,AItBA,KL/CA,CK+CM,CAAC,CL/CP,ECqEU,CAAC,CItBC,EAAE,AL/Cd,CK+Cc,CAAA,EAAA,IJsBQ,AItBR,CJsBS,AItBT,iBAAiB,EAAA,CAAE,EAAE,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC;EJuBnF,CAAC,CItBG,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE;EJwB7C,IAAA,AIvBA,CJuBA,IIvBK,CAAC,CAAC,CAAC,EJuBR,CAAA,AIvBW,kBAAkB,CAAA,CAAE,GJu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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["import { Boid } from \"./boid\";\r\n\r\nexport class Bird {\r\n    private boid: Boid;\r\n    private wingSpan: number;\r\n    private greenValue = 0;\r\n\r\n    constructor(boid: Boid, wingSpan = 10) {\r\n        this.boid = boid;\r\n        this.wingSpan = wingSpan;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, frame: number): void {\r\n        const angle = Math.atan2(this.boid.velocity.y, this.boid.velocity.x);\r\n        const { x, y } = this.boid.position;\r\n        const size = this.wingSpan + (Math.sin(frame / 10) * this.wingSpan) / 4;\r\n\r\n        ctx.save();\r\n\r\n        ctx.translate(x, y);\r\n        ctx.rotate(angle);\r\n\r\n        ctx.beginPath();\r\n        ctx.moveTo(size, 0);\r\n        ctx.lineTo(-size / 2, size / 2);\r\n        ctx.lineTo(-size / 2, -size / 2);\r\n        ctx.closePath();\r\n\r\n        const color = `rgb(255, ${this.greenValue}, 255)`;\r\n        // ctx.fillStyle = color;\r\n        ctx.fillStyle = \"#EDF2F4\";\r\n        this.greenValue = Math.min(this.greenValue + 2, 255);\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n    }\r\n\r\n    printBoidForces(ctx: CanvasRenderingContext2D): void {\r\n        ctx.save();\r\n\r\n        ctx.font = \"10px Arial\";\r\n\r\n        ctx.fillStyle = \"black\";\r\n        ctx.fillText(\r\n            `${this.boid.alignmentForce.x.toFixed(2)}, ${this.boid.alignmentForce.y.toFixed(2)}`,\r\n            this.boid.position.x + 10,\r\n            this.boid.position.y - 10\r\n        );\r\n\r\n        ctx.fillStyle = \"red\";\r\n        ctx.fillText(\r\n            `${this.boid.cohesionForce.x.toFixed(2)}, ${this.boid.cohesionForce.y.toFixed(2)}`,\r\n            this.boid.position.x + 10,\r\n            this.boid.position.y\r\n        );\r\n\r\n        ctx.fillStyle = \"blue\";\r\n        ctx.fillText(\r\n            `${this.boid.separationForce.x.toFixed(2)}, ${this.boid.separationForce.y.toFixed(2)}`,\r\n            this.boid.position.x + 10,\r\n            this.boid.position.y + 10\r\n        );\r\n\r\n        ctx.restore();\r\n    }\r\n}\r\n","export class Vector {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number = 0, y: number = 0) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    add(v: Vector): Vector {\r\n        return new Vector(this.x + v.x, this.y + v.y);\r\n    }\r\n\r\n    sub(v: Vector): Vector {\r\n        return new Vector(this.x - v.x, this.y - v.y);\r\n    }\r\n\r\n    mult(n: number): Vector {\r\n        return new Vector(this.x * n, this.y * n);\r\n    }\r\n\r\n    div(n: number): Vector {\r\n        return new Vector(this.x / n, this.y / n);\r\n    }\r\n\r\n    normalize(): Vector {\r\n        const mag = this.mag();\r\n        if (mag !== 0) {\r\n            return this.div(mag);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    limit(max: number): Vector {\r\n        if (this.mag() > max) {\r\n            return this.normalize().mult(max);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    mag(): number {\r\n        return Math.sqrt(this.x * this.x + this.y * this.y);\r\n    }\r\n\r\n    static dist(v1: Vector, v2: Vector): number {\r\n        return v1.sub(v2).mag();\r\n    }\r\n}\r\n","import { Obstacle } from \"./obstacle\";\r\nimport { Vector } from \"./vector\";\r\n\r\nexport class Boid {\r\n    public alignmentForce = new Vector(0, 0);\r\n    public cohesionForce = new Vector(0, 0);\r\n    public separationForce = new Vector(0, 0);\r\n\r\n    private acceleration = new Vector(0, 0);\r\n    private seekForceMultiplier = 1.5;\r\n\r\n    private edgeAvoidanceDistance = 20;\r\n    private edgeAvoidanceStrength = 1;\r\n\r\n    private obstacleAvoidanceDistance = 20;\r\n    private obstacleAvoidanceStrength = 0.5;\r\n\r\n    constructor(\r\n        public position: Vector,\r\n        public velocity: Vector,\r\n        private maxSpeed: number,\r\n        private maxForce: number\r\n    ) {}\r\n\r\n    update(\r\n        boids: Boid[],\r\n        cursorPosition: Vector | null,\r\n        obstacles: Obstacle[],\r\n        screenWidth: number,\r\n        screenHeight: number\r\n    ): void {\r\n        this.applyFlockingBehaviors(boids);\r\n\r\n        if (cursorPosition) this.applyCursorForce(cursorPosition);\r\n        this.applyEdgeAvoidanceForce(screenWidth, screenHeight);\r\n        this.applyObstacleAvoidanceForce(obstacles);\r\n\r\n        this.updateVelocity();\r\n        this.updatePosition();\r\n        this.resetAcceleration();\r\n    }\r\n\r\n    isOutside(width: number, height: number): boolean {\r\n        return (\r\n            this.position.x < 0 ||\r\n            this.position.y < 0 ||\r\n            this.position.x > width ||\r\n            this.position.y > height\r\n        );\r\n    }\r\n\r\n    private seek(target: Vector): Vector {\r\n        const desired = target.sub(this.position).normalize().mult(this.maxSpeed);\r\n        const steer = desired.sub(this.velocity).limit(this.maxForce);\r\n        return steer;\r\n    }\r\n\r\n    private applyFlockingBehaviors(boids: Boid[]): void {\r\n        this.separationForce = this.calculateSeparationForce(boids, 50);\r\n        this.alignmentForce = this.calculateAlignmentForce(boids, 100);\r\n        this.cohesionForce = this.calculateCohesionForce(boids, 100);\r\n\r\n        this.applySteerForce(this.separationForce, this.maxForce * 1.5);\r\n        this.applySteerForce(this.alignmentForce);\r\n        this.applySteerForce(this.cohesionForce);\r\n    }\r\n\r\n    private applyCursorForce(cursorPosition: Vector): void {\r\n        const cursorForce = this.seek(cursorPosition).mult(this.seekForceMultiplier);\r\n        this.applyForce(cursorForce);\r\n    }\r\n\r\n    private applyEdgeAvoidanceForce(screenWidth: number, screenHeight: number): void {\r\n        const edgeAvoidanceForce = this.calculateEdgeAvoidanceForce(screenWidth, screenHeight);\r\n        this.applyForce(edgeAvoidanceForce);\r\n    }\r\n\r\n    private applyObstacleAvoidanceForce(obstacles: Obstacle[]): void {\r\n        const obstacleAvoidanceForce = this.calculateObstacleAvoidanceForce(obstacles);\r\n        this.applyForce(obstacleAvoidanceForce);\r\n    }\r\n\r\n    private getBoidsInRange(boids: Boid[], range: number): Boid[] {\r\n        return boids.filter(\r\n            (boid) =>\r\n                Vector.dist(this.position, boid.position) > 0 &&\r\n                Vector.dist(this.position, boid.position) < range\r\n        );\r\n    }\r\n\r\n    private calculateSeparationForce(boids: Boid[], range: number): Vector {\r\n        const diffVectors = this.getBoidsInRange(boids, range).map((boid) =>\r\n            this.position\r\n                .sub(boid.position)\r\n                .normalize()\r\n                .div(Vector.dist(this.position, boid.position))\r\n        );\r\n\r\n        return this.getAverageVector(diffVectors);\r\n    }\r\n\r\n    private calculateAlignmentForce(boids: Boid[], range: number): Vector {\r\n        const velocityVectors = this.getBoidsInRange(boids, range).map((boid) => boid.velocity);\r\n\r\n        return this.getAverageVector(velocityVectors);\r\n    }\r\n\r\n    private calculateCohesionForce(boids: Boid[], range: number): Vector {\r\n        const positionVectors = this.getBoidsInRange(boids, range).map((boid) =>\r\n            boid.position.sub(this.position)\r\n        );\r\n        return this.getAverageVector(positionVectors);\r\n    }\r\n\r\n    private calculateEdgeAvoidanceForce(screenWidth: number, screenHeight: number): Vector {\r\n        let avoidanceForce = new Vector(0, 0);\r\n\r\n        const leftEdgeDistance = this.position.x;\r\n        const rightEdgeDistance = screenWidth - this.position.x;\r\n        const topEdgeDistance = this.position.y;\r\n        const bottomEdgeDistance = screenHeight - this.position.y;\r\n\r\n        if (leftEdgeDistance < this.edgeAvoidanceDistance) {\r\n            avoidanceForce.x =\r\n                ((this.edgeAvoidanceDistance - leftEdgeDistance) / this.edgeAvoidanceDistance) *\r\n                this.edgeAvoidanceStrength;\r\n        } else if (rightEdgeDistance < this.edgeAvoidanceDistance) {\r\n            avoidanceForce.x = -(\r\n                ((this.edgeAvoidanceDistance - rightEdgeDistance) / this.edgeAvoidanceDistance) *\r\n                this.edgeAvoidanceStrength\r\n            );\r\n        }\r\n\r\n        if (topEdgeDistance < this.edgeAvoidanceDistance) {\r\n            avoidanceForce.y =\r\n                ((this.edgeAvoidanceDistance - topEdgeDistance) / this.edgeAvoidanceDistance) *\r\n                this.edgeAvoidanceStrength;\r\n        } else if (bottomEdgeDistance < this.edgeAvoidanceDistance) {\r\n            avoidanceForce.y = -(\r\n                ((this.edgeAvoidanceDistance - bottomEdgeDistance) / this.edgeAvoidanceDistance) *\r\n                this.edgeAvoidanceStrength\r\n            );\r\n        }\r\n\r\n        return avoidanceForce;\r\n    }\r\n\r\n    private calculateObstacleAvoidanceForce(obstacles: Obstacle[]): Vector {\r\n        let avoidanceForce = new Vector(0, 0);\r\n\r\n        for (const obstacle of obstacles) {\r\n            const directionToObstacle = this.position.sub(obstacle.center);\r\n            const distanceToObstacle = directionToObstacle.mag();\r\n\r\n            if (distanceToObstacle < this.obstacleAvoidanceDistance + obstacle.radius) {\r\n                const avoidanceStrength =\r\n                    ((this.obstacleAvoidanceDistance + obstacle.radius - distanceToObstacle) /\r\n                        this.obstacleAvoidanceDistance) *\r\n                    this.obstacleAvoidanceStrength;\r\n                avoidanceForce = avoidanceForce.add(\r\n                    directionToObstacle.normalize().mult(avoidanceStrength)\r\n                );\r\n            }\r\n        }\r\n\r\n        return avoidanceForce;\r\n    }\r\n\r\n    private getAverageVector(vectors: Vector[]): Vector {\r\n        const sum = vectors.reduce((sum, vector) => sum.add(vector), new Vector(0, 0));\r\n        const count = vectors.length;\r\n        return count > 0 ? sum.div(count) : new Vector(0, 0);\r\n    }\r\n\r\n    private applyForce(force: Vector): void {\r\n        this.acceleration = this.acceleration.add(force);\r\n    }\r\n\r\n    private applySteerForce(force: Vector, maxForce = this.maxForce): void {\r\n        if (force.mag() > 0) {\r\n            const steerForce = force\r\n                .normalize()\r\n                .mult(this.maxSpeed)\r\n                .sub(this.velocity)\r\n                .limit(maxForce);\r\n            this.applyForce(steerForce);\r\n        }\r\n    }\r\n\r\n    private updateVelocity(): void {\r\n        this.velocity = this.velocity.add(this.acceleration).limit(this.maxSpeed);\r\n    }\r\n\r\n    private updatePosition(): void {\r\n        this.position = this.position.add(this.velocity);\r\n    }\r\n\r\n    private resetAcceleration(): void {\r\n        this.acceleration = new Vector(0, 0);\r\n    }\r\n}\r\n","export class Canvas {\r\n    public readonly element: HTMLCanvasElement;\r\n    public readonly context: CanvasRenderingContext2D;\r\n\r\n    constructor(elementId: string) {\r\n        this.element = document.getElementById(elementId) as HTMLCanvasElement;\r\n        this.context = this.element?.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n        if (!this.context) {\r\n            throw new Error(\"Could not get canvas context\");\r\n        }\r\n\r\n        this.updateSize();\r\n        window.addEventListener(\"resize\", () => this.updateSize());\r\n    }\r\n\r\n    get width(): number {\r\n        return this.element.width;\r\n    }\r\n\r\n    get height(): number {\r\n        return this.element.height;\r\n    }\r\n\r\n    private updateSize(): void {\r\n        this.element.width = window.innerWidth;\r\n        this.element.height = window.innerHeight;\r\n    }\r\n\r\n    public clear(): void {\r\n        this.context.clearRect(0, 0, this.element.width, this.element.height);\r\n    }\r\n}\r\n","import { Vector } from \"./vector\";\r\n\r\n// cursor position\r\n\r\nlet cursorPosition: Vector = new Vector(0, 0);\r\nlet cursorIsDown = false;\r\n\r\nfunction updateCursorPosition(event: MouseEvent | TouchEvent) {\r\n    if (event instanceof TouchEvent) {\r\n        cursorPosition = new Vector(event.touches[0].clientX, event.touches[0].clientY);\r\n    } else if (event instanceof MouseEvent) {\r\n        cursorPosition = new Vector(event.clientX, event.clientY);\r\n    }\r\n}\r\n\r\nfunction onCursorUp() {\r\n    cursorIsDown = false;\r\n}\r\n\r\nfunction onCursorDown() {\r\n    cursorIsDown = true;\r\n}\r\n\r\nwindow.addEventListener(\"mousemove\", updateCursorPosition);\r\nwindow.addEventListener(\"touchmove\", updateCursorPosition);\r\n\r\nwindow.addEventListener(\"mousedown\", onCursorDown);\r\nwindow.addEventListener(\"touchstart\", onCursorDown);\r\n\r\nwindow.addEventListener(\"mouseup\", onCursorUp);\r\nwindow.addEventListener(\"touchend\", onCursorUp);\r\n\r\nexport function getCursorPosition(): Vector | null {\r\n    return cursorIsDown ? cursorPosition : null;\r\n}\r\n\r\n// bird count input\r\n\r\nlet birdCountInput = document.getElementById(\"birdCount\") as HTMLInputElement;\r\n\r\nexport function onBirdCountChange(callback: (birdCount: number) => void): void {\r\n    birdCountInput.addEventListener(\"change\", () => {\r\n        callback(parseInt(birdCountInput.value));\r\n    });\r\n}\r\n","import { Vector } from \"./vector\";\r\n\r\nexport class Obstacle {\r\n    center: Vector;\r\n    radius: number;\r\n\r\n    constructor(center: Vector, radius: number) {\r\n        this.center = center;\r\n        this.radius = radius;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        ctx.save();\r\n\r\n        ctx.beginPath();\r\n        ctx.arc(this.center.x, this.center.y, this.radius, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n\r\n        ctx.fillStyle = \"#8D99AE\";\r\n        ctx.fill();\r\n\r\n        ctx.restore();\r\n    }\r\n}\r\n","import \"./styles.css\";\r\nimport { Bird } from \"./bird\";\r\nimport { Boid } from \"./boid\";\r\nimport { Vector } from \"./vector\";\r\nimport { Canvas } from \"./canvas\";\r\nimport { getCursorPosition, onBirdCountChange } from \"./ui\";\r\nimport { Obstacle } from \"./obstacle\";\r\n\r\nconst canvas = new Canvas(\"canvas\");\r\n\r\nfunction generateRandomBoid(): Boid {\r\n    const MAX_SPEED = 2;\r\n    const MAX_FORCE = 0.05;\r\n    const position = new Vector(Math.random() * canvas.width, Math.random() * canvas.height);\r\n    const velocity = new Vector(Math.random() - 0.5, Math.random() - 0.5);\r\n\r\n    return new Boid(position, velocity, MAX_SPEED, MAX_FORCE);\r\n}\r\n\r\nfunction generateBirds(amount: number): void {\r\n    boids = Array.from({ length: amount }, generateRandomBoid);\r\n    birds = boids.map((boid) => new Bird(boid));\r\n}\r\n\r\nlet boids: Boid[];\r\nlet birds: Bird[];\r\nlet obstacles: Obstacle[];\r\n\r\nfunction generateRandomObstacle(): Obstacle {\r\n    const radius = Math.random() * 50;\r\n    const position = new Vector(Math.random() * canvas.width, Math.random() * canvas.height);\r\n\r\n    return new Obstacle(position, radius);\r\n}\r\n\r\nfunction generateObstacles(amount: number): void {\r\n    obstacles = Array.from({ length: amount }, generateRandomObstacle);\r\n}\r\n\r\nfunction runSimulation(frameCount = 0) {\r\n    canvas.clear();\r\n\r\n    // paint canvas black\r\n    canvas.context.fillStyle = \"#2B2D42\";\r\n    canvas.context.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n    boids.forEach((boid, i) => {\r\n        boid.update(boids, getCursorPosition(), obstacles, canvas.width, canvas.height);\r\n        if (boid.isOutside(canvas.width, canvas.height)) {\r\n            boids[i] = generateRandomBoid();\r\n            birds[i] = new Bird(boids[i]);\r\n        }\r\n        birds[i].draw(canvas.context, frameCount);\r\n    });\r\n\r\n    obstacles.forEach((obstacle) => {\r\n        obstacle.draw(canvas.context);\r\n    });\r\n\r\n    drawCursor();\r\n\r\n    requestAnimationFrame(() => runSimulation(frameCount + 1));\r\n}\r\n\r\nfunction drawCursor() {\r\n    const cursorPosition = getCursorPosition();\r\n    if (cursorPosition) {\r\n        const size = 10;\r\n\r\n        canvas.context.strokeStyle = \"#EF233C\";\r\n        canvas.context.beginPath();\r\n        canvas.context.moveTo(cursorPosition.x - size, cursorPosition.y - size);\r\n        canvas.context.lineTo(cursorPosition.x + size, cursorPosition.y + size);\r\n        canvas.context.moveTo(cursorPosition.x + size, cursorPosition.y - size);\r\n        canvas.context.lineTo(cursorPosition.x - size, cursorPosition.y + size);\r\n        canvas.context.stroke();\r\n    }\r\n}\r\n\r\nonBirdCountChange((birdCount) => {\r\n    generateBirds(birdCount);\r\n});\r\ngenerateObstacles(10);\r\ngenerateBirds(200);\r\nrunSimulation();\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}